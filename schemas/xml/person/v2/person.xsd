<?xml version="1.0" encoding="utf-8"?>
<!-- Creator xpecto AG, Thomas GrÃ¶tzinger, xpecto.com -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
		   elementFormDefault="qualified">
	
	<xs:simpleType name="string">
		<xs:restriction base="xs:string">
			<xs:maxLength value="250"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="memo">
		<xs:restriction base="xs:string">
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="key">
		<xs:restriction base="xs:string">
			<xs:minLength value="5"/>
			<xs:maxLength value="50"/>
			<xs:pattern value="[a-zA-Z0-9_+-]+"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="country">
		<xs:annotation>
			<xs:documentation>2 letter iso-code for country e.g. DE for germany</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="2"/>
			<xs:maxLength value="2"/>
			<xs:pattern value="[A-Z]{2}"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="integerunsigned">
		<xs:restriction base="xs:integer">
			<xs:minInclusive value="0"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="decimalunsigned">
		<xs:restriction base="xs:decimal">
			<xs:minInclusive value="0"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="persontype">
		<xs:restriction base="xs:unsignedByte">
			<xs:enumeration value="0" id="natural_person"/>
			<xs:enumeration value="1" id="legal_person"/>
			<xs:enumeration value="2" id="marriage"/>
			<xs:enumeration value="3" id="inheritance"/>
			<xs:enumeration value="9" id="other_org"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="personroletype">
		<xs:restriction base="xs:unsignedByte">
			<xs:annotation>
				<xs:documentation>
					Default roles which every system must allow to import. Other roles are custome:
					50 - spouse
					51 - shareholder
					52 - heritage
					60 - controlling_person
					70 - director
					71 - ceo
					72 - board_chairman
					73 - board_member
				</xs:documentation>
			</xs:annotation>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="maritalstatus">
		<xs:restriction base="xs:unsignedByte">
			<xs:enumeration value="0" id="single"/>
			<xs:enumeration value="1" id="married"/>
			<xs:enumeration value="11" id="indivorce"/>
			<xs:enumeration value="12" id="divorced"/>
			<xs:enumeration value="13" id="widowed"/>
			<xs:enumeration value="20" id="civilpartnership"/>
			<xs:enumeration value="22" id="suspendedcivilpartnership"/>
			<xs:enumeration value="23" id="partnerdeceased"/>
			<xs:enumeration value="99" id="unknwon"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="bankaccounttype">
		<xs:restriction base="xs:unsignedByte">
			<xs:enumeration value="0" id="bankaccount"/>
			<xs:enumeration value="1" id="investmentaccount"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="identdocumenttype">
		<xs:restriction base="xs:unsignedByte">
			<xs:enumeration value="0" id="idcard"/>
			<xs:enumeration value="1" id="passport"/>
			<xs:enumeration value="2" id="residence title"/>
			<xs:enumeration value="3" id="temporary  idcard"/>
			<xs:enumeration value="4" id="temporary passport"/>
			<xs:enumeration value="5" id="convention travel document (for stateless persons)"/>
			<xs:enumeration value="6" id="convention travel document (for refugees)"/>
			<xs:enumeration value="7" id="convention travel document (passport for foreigners)"/>
			<xs:enumeration value="8" id="service passport"/>
			<xs:enumeration value="9" id="diplomatic passport"/>
			<xs:enumeration value="10" id="official passport (ministerial passport)"/>
			<xs:enumeration value="11" id="driving licence"/>
			<xs:enumeration value="12" id="certificate of birth"/>
			<xs:enumeration value="99" id="unknwon"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="identservicetype">
		<xs:restriction base="xs:unsignedByte">
			<xs:enumeration value="0" id="investmentprovider"/>
			<xs:enumeration value="1" id="affiliate"/>
			<xs:enumeration value="2" id="postident"/>
			<xs:enumeration value="3" id="bank"/>
			<xs:enumeration value="4" id="notary"/>
			<xs:enumeration value="5" id="onlineident"/>
			<xs:enumeration value="15" id="invalid"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="bankaccountusagetype">
		<xs:restriction base="xs:unsignedByte">
			<xs:enumeration value="0" id="invest">
				<xs:annotation>
					<xs:documentation>used for direct debit if mandate is supplied</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="8" id="dividends_interest"/>
			<xs:enumeration value="9" id="divest"/>
			<xs:enumeration value="10" id="commission"/>
			<xs:enumeration value="16" id="securitiestransfer"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:simpleType name="currency">
		<xs:annotation>
			<xs:documentation>3 letter iso-code for currency e.g. USD for US-Dollar</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:minLength value="3"/>
			<xs:maxLength value="3"/>
			<xs:pattern value="[A-Z]{3}"/>
		</xs:restriction>
	</xs:simpleType>

	<xs:complexType name="xpectofield">
		<xs:annotation>
			<xs:documentation>additional data, which can be added and is mapped to the fields from xpecto</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="fieldid" type="string" use="required" />
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="customfield">
		<xs:sequence>
			<xs:element name="name" type="string" />
			<xs:element name="value" type="memo" />
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="customobject">
		<xs:sequence>
			<xs:element name="entity" type="key" />
			<xs:element name="customfield" type="customfield" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="key" type="key" use="required" />
		<xs:attribute name="modified" type="xs:dateTime" use="required" />
	</xs:complexType>

	<xs:complexType name="bankaccount">
		<xs:sequence>
			<xs:element name="accountholder" type="string" />
			<xs:element name="bic" type="string" minOccurs="0"/>
			<xs:choice>
				<xs:sequence>
					<xs:element name="iban" type="string" />
				</xs:sequence>
				<xs:sequence>
					<xs:element name="portfolionumber" type="string" />
				</xs:sequence>
			</xs:choice>
			<xs:element name="bank" type="string" minOccurs="0"/>
			<xs:element name="country" type="country" />
			<xs:element name="currency" type="currency" />
			<xs:element name="sharedaccount" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>true if account is shared by multiple persons, e.g. a couple</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="bankaccounttype"/>
			<xs:element name="xpectofield" type="xpectofield" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="usage" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>how the bankaccount should be used by the issuer in reference to this contract</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="types">
							<xs:annotation>
								<xs:documentation>there needs to be at least one usage type for every bankaccount, e.g. 8 for dividends</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="type" type="bankaccountusagetype" minOccurs="1" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="mandate" minOccurs="0">
							<xs:annotation>
								<xs:documentation>mandate information for direct debit if signed</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="signed" type="xs:date"/>
									<xs:element name="reference" type="string" minOccurs="0">
										<xs:annotation>
											<xs:documentation>reference for mandate, contractno is used if empty</xs:documentation>
										</xs:annotation>
									</xs:element>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="validfrom" type="xs:date" minOccurs="0" />
						<xs:element name="validuntil" type="xs:date" minOccurs="0" />
						<xs:element name="forallcontractsofproduct" type="xs:boolean" minOccurs="0">
						 	<xs:annotation>
						 		<xs:documentation>On the xpecto datastructure usages can be used per contract or per product, this flag indicates that the usage is used for all contracts off the products. If there are usages per controct, only contract usages will be considered</xs:documentation>
						 	</xs:annotation>
						 </xs:element>
					<xs:element name="xpectofield" type="xpectofield" minOccurs="0" maxOccurs="unbounded"/>
					<xs:element name="customfield" type="customfield" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attribute name="key" type="key" use="required" />
					<xs:attribute name="modified" type="xs:dateTime" use="required" />
				</xs:complexType>
			</xs:element>
			<xs:element name="customfield" type="customfield" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="key" type="key" use="required" />
		<xs:attribute name="modified" type="xs:dateTime" use="required" />
	</xs:complexType>

	<xs:complexType name="wallet">
		<xs:sequence>
			<xs:element name="walletholder" type="string" />
			<xs:element name="currency" type="string" />
			<xs:element name="walletaddress" type="string" />
			<xs:element name="blockchain" type="string" minOccurs="0"/>
			<xs:element name="xpectofield" type="xpectofield" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="usage" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>how the bankaccount should be used by the issuer in reference to this contract</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="types">
							<xs:annotation>
								<xs:documentation>there needs to be at least one usage type for every bankaccount, e.g. 8 for dividends</xs:documentation>
							</xs:annotation>
							<xs:complexType>
								<xs:sequence>
									<xs:element name="type" type="bankaccountusagetype" minOccurs="1" maxOccurs="unbounded"/>
								</xs:sequence>
							</xs:complexType>
						</xs:element>
						<xs:element name="validfrom" type="xs:date" minOccurs="0" />
						<xs:element name="validuntil" type="xs:date" minOccurs="0" />
						<xs:element name="forallcontractsofproduct" type="xs:boolean" minOccurs="0">
						 	<xs:annotation>
						 		<xs:documentation>On the xpecto datastructure usages can be used per contract or per product, this flag indicates that the usage is used for all contracts off the products. If there are usages per controct, only contract usages will be considered</xs:documentation>
						 	</xs:annotation>
						 </xs:element>
						 <xs:element name="xpectofield" type="xpectofield" minOccurs="0" maxOccurs="unbounded"/>
						 <xs:element name="customfield" type="customfield" minOccurs="0" maxOccurs="unbounded"/>
					</xs:sequence>
					<xs:attribute name="key" type="key" use="required" />
					<xs:attribute name="modified" type="xs:dateTime" use="required" />
				</xs:complexType>
			</xs:element>
			<xs:element name="customfield" type="customfield" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="key" type="key" use="required" />
		<xs:attribute name="modified" type="xs:dateTime" use="required" />
	</xs:complexType>

	<xs:complexType name="identification">
		<xs:sequence>
			<xs:element name="documentnr" type="string" />
			<xs:element name="documenttype" type="identdocumenttype" />
			<xs:element name="validfrom" type="xs:date" minOccurs="0" />
			<xs:element name="validuntil" type="xs:date" />
			<xs:element name="issuer" type="string" />
			<xs:element name="verified" type="identservicetype" minOccurs="0"/>
			<xs:element name="submitted" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>timestamp from ident-service</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="code" type="string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>code or transaction from ident-service</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="xpectofield" type="xpectofield" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="customfield" type="customfield" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="key" type="key" use="required" />
		<xs:attribute name="modified" type="xs:dateTime" use="required" />
	</xs:complexType>

	<xs:complexType name="event">
		<xs:sequence>
			<xs:element name="date" type="xs:dateTime" />
			<xs:element name="category" type="string" >
				<xs:annotation>
					<xs:documentation>category or class of event</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="subject" type="string" minOccurs="0"/>
			<xs:element name="file" type="string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>filename without path, every file needs to be included with this filename into zip-archive</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="public" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>customer is able to see event in webportal</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="comment" type="memo" minOccurs="0" />
			<xs:element name="xpectofield" type="xpectofield" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="customfield" type="customfield" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="key" type="key" use="required" />
		<xs:attribute name="modified" type="xs:dateTime" use="required" />
	</xs:complexType>

	<xs:complexType name="property">
		<xs:sequence>
			<xs:element name="date" type="xs:dateTime" />
			<xs:element name="property" type="string" >
				<xs:annotation>
					<xs:documentation>name of property e.g. "AGB" for acknowledging AGB during signing process</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="public" type="xs:boolean">
				<xs:annotation>
					<xs:documentation>customer is able to see property in webportal</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="validfrom" type="xs:date" minOccurs="0" />
			<xs:element name="validuntil" type="xs:date" minOccurs="0" />
			<xs:element name="comment" type="memo" minOccurs="0" />
			<xs:element name="xpectofield" type="xpectofield" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="customfield" type="customfield" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="key" type="key" use="required" />
		<xs:attribute name="modified" type="xs:dateTime" use="required" />
	</xs:complexType>
	
	<xs:complexType name="person">
		<xs:sequence>
			<xs:element name="type" type="persontype"/>
			<xs:choice>
				<xs:sequence>
					<xs:element name="companyname" type="string"/>		
					<xs:element name="salutation" type="string" minOccurs="0"/>
					<xs:element name="title" type="string" minOccurs="0" />
					<xs:element name="forename" type="string" minOccurs="0"/>
					<xs:element name="surname" type="string" minOccurs="0"/>
				</xs:sequence>
				<xs:sequence>
					<xs:element name="salutation" type="string" />
					<xs:element name="title" type="string" minOccurs="0" />
					<xs:element name="forename" type="string" />
					<xs:element name="surname" type="string" />
				</xs:sequence>
			</xs:choice>
			<xs:element name="street" type="string" />
			<xs:element name="zip" type="string" />
			<xs:element name="city" type="string" />
			<xs:element name="country" type="country" />
			<xs:element name="birthdate" type="xs:date" minOccurs="0" />
			<xs:element name="birthplace" type="string" minOccurs="0" />
			<xs:element name="birthcountry" type="string" minOccurs="0" />
			<xs:element name="nationality" type="string" minOccurs="0" />
			<xs:element name="furthernationality" type="string" minOccurs="0" maxOccurs="5" />
			<xs:element name="position" type="string" minOccurs="0" />

			<xs:element name="emailpriv" type="string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>main, private mailaddress for person, used as userid if contract.customer.userid is not specified</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="mobilepriv" type="string" minOccurs="0"/>
			<xs:element name="phonepriv" type="string" minOccurs="0" maxOccurs="2" />
			<xs:element name="webpriv" type="string" minOccurs="0" />

			<xs:element name="email" type="string" minOccurs="0" />
			<xs:element name="mobile" type="string" minOccurs="0" />
			<xs:element name="phone" type="string" minOccurs="0" maxOccurs="2" />
			<xs:element name="web" type="string" minOccurs="0" />
					
			<xs:element name="maritalstatus" type="maritalstatus" minOccurs="0"  />
			<xs:element name="education" type="string" minOccurs="0" />
			<xs:element name="xpectofield" type="xpectofield" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="bankaccount" minOccurs="0" maxOccurs="unbounded" type="bankaccount"/>
			<xs:element name="wallet" minOccurs="0" maxOccurs="unbounded" type="wallet"/>
			<xs:element name="identification" minOccurs="0" maxOccurs="unbounded" type="identification"/>
			<xs:element name="subperson" minOccurs="0" maxOccurs="unbounded" >
				<xs:annotation>
					<xs:documentation>
						if a customer consists of multiple persons you should supply subpersons including their role
						e.g. a marriage consists of two spouses 
						or a company has a director and a controlling_person
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="role" type="personroletype" />
						<xs:element name="person" type="person" />
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="event" type="event" minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="property" type="property" minOccurs="0" maxOccurs="unbounded" />
			<xs:element name="customfield" type="customfield" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="customobject" type="customobject" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
		<xs:attribute name="key" type="key" use="required" />
		<xs:attribute name="modified" type="xs:dateTime" use="required" />
	</xs:complexType>
</xs:schema>