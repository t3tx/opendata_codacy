{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "type": "object",
  "$defs": {
    "decimalunsigned": {
      "type": "number",
      "minimum": 0
    },
    "integerunsigned": {
      "type": "integer",
      "minimum": 0
    },
    "string": {
      "type": "string",
      "maxLength": 250
    },
    "xpectofield": {
      "description": "additional data, which can be added and is mapped to the fields from xpecto",
      "type": "object",
      "required": [ "fieldid", "value" ],
      "properties": {
        "fieldid": {
          "$ref": "#/$defs/string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "memo": {
      "type": "string"
    },
    "key": {
      "type": "string",
      "minLength": 5,
      "maxLength": 50,
      "pattern": "[a-zA-Z0-9_+-]+"
    },
    "customfield": {
      "type": "object",
      "required": [ "name", "value" ],
      "properties": {
        "name": {
          "$ref": "#/$defs/string"
        },
        "value": {
          "$ref": "#/$defs/memo"
        }
      }
    },
    "event": {
      "type": "object",
      "required": [ "date", "category", "public", "key", "modified" ],
      "properties": {
        "date": {
          "type": "string",
          "format": "date"
        },
        "category": {
          "description": "category or class of event",
          "$ref": "#/$defs/string"
        },
        "subject": {
          "$ref": "#/$defs/string"
        },
        "file": {
          "$ref": "#/$defs/string",
          "description": "filename without path, every file needs to be included with this filename into zip-archive"
        },
        "public": {
          "type": "boolean",
          "description": "customer is able to see event in webportal"
        },
        "comment": {
          "$ref": "#/$defs/memo"
        },
        "xpectofields": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/xpectofield"
          }
        },
        "customfields": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/customfield"
          }
        },
        "key": {
          "$ref": "#/$defs/key"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "customobject": {
      "type": "object",
      "required": [ "entity", "customfields", "key", "modified" ],
      "properties": {
        "entity": {
          "$ref": "#/$defs/key"
        },
        "customfields": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/customfield"
          },
          "minItems": 1
        },
        "key": {
          "$ref": "#/$defs/key"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "property": {
      "type": "object",
      "required": [ "date", "property", "public", "key", "modified" ],
      "properties": {
        "date": {
          "type": "string",
          "format": "date"
        },
        "property": {
          "type": "string",
          "description": "name of property e.g.\"AGB\" for acknowledging AGB during signing process"
        },
        "public": {
          "type": "boolean",
          "description": "customer is able to see property in webportal"
        },
        "validfrom": {
          "type": "string",
          "format": "date"
        },
        "validuntil": {
          "type": "string",
          "format": "date"
        },
        "comment": {
          "$ref": "#/$defs/memo"
        },
        "xpectofields": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/xpectofield"
          }
        },
        "customfields": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/customfield"
          }
        },
        "key": {
          "$ref": "#/$defs/key"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "persontype": {
      "type": "integer",
      "description": "0 natural_person, 1 legal_person, 2 marriage, 3 inheritance, 9 other_org",
      "enum": [ 0, 1, 2, 3, 9 ]
    },
    "country": {
      "description": "2 letter iso-code for country e.g. DE for germany",
      "type": "string",
      "minLength": 2,
      "maxLength": 2,
      "pattern": "[A-Z]{2}"
    },
    "maritalstatus": {
      "type": "integer",
      "description": "0 single, 1 married, 11 indivorce, 12 divorced, 13 widowed, 20 civilpartnership, 22 suspendedcivilpartnership, 23 partnerdeceased, 99 unknwon",
      "enum": [ 0, 1, 11, 12, 13, 20, 22, 23, 99 ]
    },
    "currency": {
      "description": "3 letter iso-code for currency e.g. USD for US-Dollar",
      "type": "string",
      "minLength": 3,
      "maxLength": 3,
      "pattern": "[A-Z]{3}"
    },
    "bankaccounttype": {
      "type": "integer",
      "description": "0 bankaccount; 1 investmentaccount",
      "enum": [ 0, 1 ]
    },
    "bankaccountusagetype": {
      "type": "integer",
      "description": "0 invest; 8 dividends_interest; 9 divest; 10 commission; 16 securitiestransfer",
      "enum": [ 0, 8, 9, 10, 16 ]
    },
    "bankaccount": {
      "type": "object",
      "oneOf": [
        {
          "type": "object",
          "required": [ "iban" ],
          "properties": {
            "iban": {
              "$ref": "#/$defs/string"
            }
          }
        },
        {
          "type": "object",
          "required": [ "portfolionumber" ],
          "properties": {
            "portfolionumber": {
              "$ref": "#/$defs/string"
            }
          }
        }
      ],
      "required": [ "accountholder", "country", "currency", "sharedaccount", "type", "key", "modified" ],
      "properties": {
        "accountholder": {
          "$ref": "#/$defs/string"
        },
        "bic": {
          "$ref": "#/$defs/string"
        },
        "bank": {
          "$ref": "#/$defs/string"
        },
        "country": {
          "$ref": "#/$defs/country"
        },
        "currency": {
          "$ref": "#/$defs/currency"
        },
        "sharedaccount": {
          "type": "boolean",
          "description": "true if account is shared by multiple persons, e.g. a couple"
        },
        "type": {
          "$ref": "#/$defs/bankaccounttype"
        },
        "xpectofields": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/xpectofield"
          }
        },
        "usages": {
          "type": "array",
          "description": "how the bankaccount should be used by the issuer in reference to this contract",
          "items": {
            "type": "object",
            "required": [ "types", "key", "modified" ],
            "properties": {
              "types": {
                "type": "array",
                "items": {
                  "$ref": "#/$defs/bankaccountusagetype"
                },
                "minItems": 1
              }
            },
            "mandate": {
              "type": "object",
              "description": "mandate information for direct debit if signed",
              "required": [ "signed" ],
              "properties": {
                "signed": {
                  "type": "string",
                  "format": "date"
                },
                "reference": {
                  "$ref": "#/$defs/string"
                }
              }
            },
            "validfrom": {
              "type": "string",
              "format": "date"
            },
            "validuntil": {
              "type": "string",
              "format": "date"
            },
            "forallcontractsofproduct": {
              "description": "On the xpecto datastructure usages can be used per contract or per product, this flag indicates that the usage is used for all contracts off the products. If there are usages per controct, only contract usages will be considered",
              "type": "boolean"
            },
            "xpectofields": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/xpectofield"
              }
            },
            "customfields": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/customfield"
              }
            },
            "key": {
              "$ref": "#/$defs/key"
            },
            "modified": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "customfields": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/customfield"
          }
        },
        "key": {
          "$ref": "#/$defs/key"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "wallet": {
      "type": "object",
      "required": [ "walletholder", "currency", "walletaddress", "key", "modified" ],
      "properties": {
        "walletholder": {
          "$ref": "#/$defs/string"
        },
        "currency": {
          "$ref": "#/$defs/string"
        },
        "walletaddress": {
          "$ref": "#/$defs/string"
        },
        "blockchain": {
          "$ref": "#/$defs/string"
        },
        "xpectofields": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/xpectofield"
          }
        },
        "usages": {
          "type": "array",
          "description": "how the bankaccount should be used by the issuer in reference to this contract",
          "items": {
            "type": "object",
            "required": [ "types", "key", "modified" ],
            "properties": {
              "types": {
                "type": "array",
                "description": "there needs to be at least one usage type for every bankaccount, e.g. 8 for dividends",
                "items": {
                  "$ref": "#/$defs/bankaccountusagetype"
                },
                "minItems": 1
              },
              "validfrom": {
                "type": "string",
                "format": "date"
              },
              "validuntil": {
                "type": "string",
                "format": "date"
              },
              "forallcontractsofproduct": {
                "description": "On the xpecto datastructure usages can be used per contract or per product, this flag indicates that the usage is used for all contracts off the products. If there are usages per controct, only contract usages will be considered",
                "type": "boolean"
              },
              "xpectofields": {
                "type": "array",
                "items": {
                  "$ref": "#/$defs/xpectofield"
                }
              },
              "customfields": {
                "type": "array",
                "items": {
                  "$ref": "#/$defs/customfield"
                }
              },
              "key": {
                "$ref": "#/$defs/key"
              },
              "modified": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        },
        "customfields": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/customfield"
          }
        },
        "key": {
          "$ref": "#/$defs/key"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "identdocumenttype": {
      "type": "integer",
      "description": "0 idcard, 1 passport, 2 residence title, 3 temporary  idcard, 4 temporary passport, 5 convention travel document (for stateless persons), 6 convention travel document (for refugees), 7 convention travel document (passport for foreigners), 8 service passport, 9 diplomatic passport, 10 official passport (ministerial passport), 11 driving licence, 12 certificate of birth, 99 unknwon",
      "enum": [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 99 ]
    },
    "identservicetype": {
      "type": "integer",
      "description": "0 investmentprovider ,1 affiliate ,2 postident ,3 bank ,4 notary ,5 onlineident ,8 affiliate34dGewO, 15 invalid",
      "enum": [ 0, 1, 2, 3, 4, 5, 8, 15 ]
    },
    "identification": {
      "type": "object",
      "required": [ "documentnr", "issuer", "validuntil", "documenttype", "submitted", "key", "modified" ],
      "properties": {
        "documentnr": {
          "$ref": "#/$defs/string"
        },
        "documenttype": {
          "$ref": "#/$defs/identdocumenttype"
        },
        "validfrom": {
          "type": "string",
          "format": "date"
        },
        "validuntil": {
          "$ref": "#/$defs/string"
        },
        "issuer": {
          "$ref": "#/$defs/string"
        },
        "verified": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/identservicetype"
          }
        },
        "submitted": {
          "description": "timestamp from ident-service",
          "type": "string",
          "format": "date"
        },
        "code": {
          "description": "code or transaction from ident-service",
          "$ref": "#/$defs/string"
        },
        "xpectofields": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/xpectofield"
          }
        },
        "customfields": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/customfield"
          }
        },
        "key": {
          "$ref": "#/$defs/key"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "personroletype": {
      "type": "integer",
      "description": "50 spouse, 51 shareholder, 52 heritage, 60 controlling_person, 70 director, 71 ceo, 72 board_chairman, 73 board_member can always imported, other types are custom"
    },
    "person": {
      "type": "object",
      "oneOf": [
        {
          "type": "object",
          "required": [ "companyname" ],
          "properties": {
            "companyname": { "$ref": "#/$defs/string" },
            "salutation": { "$ref": "#/$defs/string" },
            "title": { "$ref": "#/$defs/string" },
            "forename": { "$ref": "#/$defs/string" },
            "surname": { "$ref": "#/$defs/string" }
          }

        },
        {
          "type": "object",
          "required": [ "salutation", "forename", "surname" ],
          "properties": {
            "salutation": { "$ref": "#/$defs/string" },
            "title": { "$ref": "#/$defs/string" },
            "forename": { "$ref": "#/$defs/string" },
            "surname": { "$ref": "#/$defs/string" }
          }
        }
      ],
      "required": [ "type", "street", "zip", "city", "country", "key", "modified" ],
      "properties": {
        "type": {
          "$ref": "#/$defs/persontype"
        },
        "street": {
          "$ref": "#/$defs/string"
        },
        "zip": {
          "$ref": "#/$defs/string"
        },
        "city": {
          "$ref": "#/$defs/string"
        },
        "country": {
          "$ref": "#/$defs/country"
        },
        "birthdate": {
          "type": "string",
          "format": "date"
        },
        "birthplace": {
          "$ref": "#/$defs/string"
        },
        "birthcountry": {
          "$ref": "#/$defs/string"
        },
        "nationality": {
          "$ref": "#/$defs/string"
        },
        "furthernationalities": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/string"
          },
          "maxItems": 5
        },
        "position": {
          "$ref": "#/$defs/string"
        },
        "emailpriv": {
          "$ref": "#/$defs/string",
          "description": "main, private mailaddress for person, used as userid if contract.customer.userid is not specified"
        },
        "mobilepriv": {
          "$ref": "#/$defs/string"
        },
        "phonepriv": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/string"
          },
          "maxItems": 2
        },
        "webpriv": {
          "$ref": "#/$defs/string"
        },
        "email": {
          "$ref": "#/$defs/string"
        },
        "mobile": {
          "$ref": "#/$defs/string"
        },
        "phone": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/string"
          },
          "maxItems": 2
        },
        "web": {
          "$ref": "#/$defs/string"
        },
        "maritalstatus": {
          "$ref": "#/$defs/maritalstatus"
        },
        "education": {
          "$ref": "#/$defs/string"
        },
        "xpectofields": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/xpectofield"
          }
        },
        "bankaccounts": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/bankaccount"
          }
        },
        "wallets": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/wallet"
          }
        },
        "identifications": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/identification"
          }
        },
        "subpersons": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "if a customer consists of multiple persons you should supply subpersons including their role e.g. a marriage consists of two spouses or a company has a director and a controlling_person",
            "required": [ "role", "person" ],
            "properties": {
              "role": {
                "$ref": "#/$defs/personroletype"
              },
              "person": {
                "$ref": "#/$defs/person"
              }
            }
          }
        },
        "event": {
          "$ref": "#/$defs/event"
        },
        "properties": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/property"
          }
        },
        "customfields": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/customfield"
          }
        },
        "customobjects": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/customobject"
          }
        },
        "key": {
          "$ref": "#/$defs/key"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}
